# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Tests action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        name: [ linux-x64, linux-i386, linux-arm64, linux-arm, linux-mips, linux-mipsel, linux-mips64, linux-mips64el, linux-powerpc ]
        os: [ ubuntu-24.04 ]
        include:
          - name: linux-x64
            arch: x64
            os: ubuntu-24.04
            c_compiler: gcc
            cmake_flags: -DASAN=on
            test_cmdline: ./bhex_tests
            dependencies:
          - name: linux-i386
            arch: i386
            os: ubuntu-24.04
            c_compiler: i686-linux-gnu-gcc
            cmake_flags:
            test_cmdline: qemu-i386 -L /usr/i686-linux-gnu ./bhex_tests
            dependencies: qemu-user gcc-i686-linux-gnu
          - name: linux-arm64
            arch: arm64
            os: ubuntu-24.04
            c_compiler: aarch64-linux-gnu-gcc
            cmake_flags:
            test_cmdline: qemu-aarch64 -L /usr/aarch64-linux-gnu ./bhex_tests
            dependencies: qemu-user gcc-aarch64-linux-gnu
          - name: linux-arm
            arch: arm
            os: ubuntu-24.04
            c_compiler: arm-linux-gnueabi-gcc
            cmake_flags:
            test_cmdline: qemu-arm -L /usr/arm-linux-gnueabi ./bhex_tests
            dependencies: qemu-user gcc-arm-linux-gnueabi
          - name: linux-mips
            arch: mips
            os: ubuntu-24.04
            c_compiler: mips-linux-gnu-gcc
            cmake_flags:
            test_cmdline: qemu-mips -L /usr/mips-linux-gnu ./bhex_tests
            dependencies: qemu-user gcc-mips-linux-gnu
          - name: linux-mipsel
            arch: mipsel
            os: ubuntu-24.04
            c_compiler: mipsel-linux-gnu-gcc
            cmake_flags:
            test_cmdline: qemu-mipsel -L /usr/mipsel-linux-gnu ./bhex_tests
            dependencies: qemu-user gcc-mipsel-linux-gnu
          - name: linux-mips64
            arch: mips64
            os: ubuntu-24.04
            c_compiler: mips64-linux-gnuabi64-gcc
            cmake_flags:
            test_cmdline: qemu-mips64 -L /usr/mips64-linux-gnuabi64 ./bhex_tests
            dependencies: qemu-user gcc-mips64-linux-gnuabi64
          - name: linux-mips64el
            arch: mips64el
            os: ubuntu-24.04
            c_compiler: mips64el-linux-gnuabi64-gcc
            cmake_flags:
            test_cmdline: qemu-mips64el -L /usr/mips64el-linux-gnuabi64 ./bhex_tests
            dependencies: qemu-user gcc-mips64el-linux-gnuabi64
          - name: linux-powerpc
            arch: powerpc
            os: ubuntu-24.04
            c_compiler: powerpc-linux-gnu-gcc
            cmake_flags:
            test_cmdline: qemu-powerpc -L /usr/powerpc-linux-gnu ./bhex_tests
            dependencies: qemu-user gcc-powerpc-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: dependencies
        run: sudo apt-get update -y && sudo apt-get --assume-yes install build-essential cmake ${{ matrix.dependencies }}

      - name: configure CMake
        run: >
          cmake
          -DENABLE_TESTS=on
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          ${{ matrix.cmake_flags }}

      - name: build
        run: make

      - name: run_tests
        run: ${{ matrix.test_cmdline }}
