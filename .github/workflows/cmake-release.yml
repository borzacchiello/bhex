# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Release action

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        name: [ linux-x64, linux-i386, linux-arm64, linux-arm, linux-mips ]
        os: [ ubuntu-24.04 ]
        include:
          - name: linux-x64
            arch: x64
            os: ubuntu-24.04
            c_compiler: gcc
            cxx_compiler: g++
            cmake_flags:
            dependencies: 
            strip: strip
          - name: linux-i386
            arch: i386
            os: ubuntu-24.04
            c_compiler: i686-linux-gnu-gcc
            cxx_compiler: i686-linux-gnu-g++
            cmake_flags:
            dependencies: gcc-i686-linux-gnu g++-i686-linux-gnu
            strip: i686-linux-gnu-strip
          - name: linux-arm64
            arch: arm64
            os: ubuntu-24.04
            c_compiler: aarch64-linux-gnu-gcc
            cxx_compiler: aarch64-linux-gnu-g++
            cmake_flags:
            dependencies: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            strip: aarch64-linux-gnu-strip
          - name: linux-arm
            arch: arm
            os: ubuntu-24.04
            c_compiler: arm-linux-gnueabi-gcc
            cxx_compiler: arm-linux-gnueabi-g++
            cmake_flags:
            dependencies: gcc-arm-linux-gnueabi g++-arm-linux-gnueabi
            strip: arm-linux-gnueabi-strip
          - name: linux-mips
            arch: mips
            os: ubuntu-24.04
            c_compiler: mips-linux-gnu-gcc
            cxx_compiler: mips-linux-gnu-g++
            cmake_flags:
            dependencies: gcc-mips-linux-gnu g++-mips-linux-gnu
            strip: mips-linux-gnu-strip
          - name: linux-mipsel
            arch: mipsel
            os: ubuntu-24.04
            c_compiler: mipsel-linux-gnu-gcc
            cxx_compiler: mipsel-linux-gnu-g++
            cmake_flags:
            dependencies: gcc-mipsel-linux-gnu g++-mipsel-linux-gnu
            strip: mipsel-linux-gnu-strip
          - name: linux-mips64
            arch: mips64
            os: ubuntu-24.04
            c_compiler: mips64-linux-gnuabi64-gcc
            cxx_compiler: mips64-linux-gnuabi64-g++
            cmake_flags:
            dependencies: gcc-mips64-linux-gnuabi64 g++-mips64-linux-gnuabi64
            strip: mips64-linux-gnuabi64-strip
          - name: linux-mips64el
            arch: mips64el
            os: ubuntu-24.04
            c_compiler: mips64el-linux-gnuabi64-gcc
            cxx_compiler: mips64el-linux-gnuabi64-g++
            cmake_flags:
            dependencies: gcc-mips64el-linux-gnuabi64 g++-mips64el-linux-gnuabi64
            strip: mips64el-linux-gnuabi64-strip
          - name: linux-powerpc
            arch: powerpc
            os: ubuntu-24.04
            c_compiler: powerpc-linux-gnu-gcc
            cxx_compiler: powerpc-linux-gnu-g++
            cmake_flags:
            dependencies: gcc-powerpc-linux-gnu g++-powerpc-linux-gnu
            strip: powerpc-linux-gnu-strip

    steps:
      - uses: actions/checkout@v4

      - name: submodules
        run: git submodule update --init

      - name: dependencies
        run: sudo apt-get update -y && sudo apt-get --assume-yes install build-essential cmake ${{ matrix.dependencies }}

      - name: build
        run: >
          mkdir release &&
          cd release &&
          cmake -DSTATIC_BUILD=on -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} ${{ matrix.cmake_flags }} .. &&
          make

      - name: build full
        run: >
          mkdir release-full &&
          cd release-full &&
          cmake -DSTATIC_BUILD=on -DCMAKE_BUILD_TYPE=Release -DENABLE_CAPSTONE=on -DENABLE_KEYSTONE=on -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} ${{ matrix.cmake_flags }} .. &&
          make

      - name: copy executables
        run: >
          cp release/bhex bhex-${{ matrix.name }} &&
          cp release-full/bhex bhex-full-${{ matrix.name }}

      - name: strip executables
        run: >
          ${{ matrix.strip }} --strip-all bhex-${{ matrix.name }} &&
          ${{ matrix.strip }} --strip-all bhex-full-${{ matrix.name }}

      - name: upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.arch }}
          path: bhex-*
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "build-*/bhex-*"
